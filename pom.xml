<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.comarch.fsm</groupId>
	<artifactId>master-config</artifactId>
	<packaging>pom</packaging>
	<version>1.19-SNAPSHOT</version>
	<name>FSM - Master configuration - POM</name>

	<scm>
		<connection>scm:svn:svn://gucio/mwm-framework/trunk/fsm-master-config/trunk</connection>
		<developerConnection>scm:svn:svn://gucio.lodz2.comarch/mwm-framework/trunk/fsm-master-config/trunk</developerConnection>
	</scm>
	<!-- mvn -B release:clean release:prepare relase:perform -->
	<properties>
		<!--Web contexts names used by webapps -->
		<web.context.name>fsm</web.context.name>
		<integration.context.name>fsm-integration</integration.context.name>
		<mobile.context.name>fsm-mobile</mobile.context.name>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<compilerVersion>1.8</compilerVersion>

		<!--dependency versions -->
		<org.springframework.version>4.0.3.RELEASE</org.springframework.version>
		<org.springframework.security-version>3.2.3.RELEASE</org.springframework.security-version>
		<org.springframework.webflow.version>2.4.1.RELEASE</org.springframework.webflow.version>
		<org.slf4j.version>1.7.2</org.slf4j.version>
		<cxf.version>2.7.5</cxf.version>
		<aspectj.version>1.8.0.M1</aspectj.version>
		<genrap.version>1.2-SIGN</genrap.version>
		<org.hibernate.version>4.2.15.Final</org.hibernate.version>
		<jasper.version>4.8.0</jasper.version>
		<jsf.version>2.2.9</jsf.version>
		<primefaces.version>5.2</primefaces.version>

		<sonar.host.url>http://gucio.lodz2.comarch:8889</sonar.host.url>
		<sonar.jdbc.url>jdbc:oracle:thin:@gucio.lodz2.comarch:1521:snr</sonar.jdbc.url>
		<sonar.jdbc.username>snr</sonar.jdbc.username>
		<sonar.jdbc.password>snr</sonar.jdbc.password>
		<sonar.jdbc.driver>oracle.jdbc.driver.OracleDriver</sonar.jdbc.driver>
		<sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
		<sonar.scm.disabled>true</sonar.scm.disabled>
		<sonar.scm.provider>svn</sonar.scm.provider>
		<sonar.scm-stats.enabled>true</sonar.scm-stats.enabled>
		<!-- <jacoco.outputDir>${session.executionRootDirectory}/target/</jacoco.outputDir> -->

		<jacoco.outputDir>${project.build.directory}</jacoco.outputDir>
		<!-- Jacoco output file for UTs -->
		<jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
		<!-- Tells Sonar where the Jacoco coverage result file is located for Unit Tests -->
		<sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>
		<!-- Jacoco output file for ITs -->
		<jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
		<!-- Tells Sonar where the Jacoco coverage result file is located for Integration Tests -->
		<sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>
		<sonar.exclusions>**/map/libs/*.js, **/primefaces/**, **/jquery.swfobject.js, **/jqueryPlugins/**</sonar.exclusions>
	</properties>

	<profiles>

		<profile>
			<id>coverage</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<argLine>-Duser.timezone=UTC ${jacoco.agent.ut.arg}</argLine>
							<!-- Specific to generate mapping between tests and covered code -->
							<!-- <properties>
								<property>
									<name>listener</name>
									<value>org.sonar.java.jacoco.JUnitListener</value>
								</property>
							</properties> -->
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<argLine>-Xmx1024m -XX:-UseSplitVerifier -Duser.timezone=UTC ${jacoco.agent.it.arg}</argLine>
							<!-- Specific to generate mapping between tests and covered code -->
							<!-- <properties>
								<property>
									<name>listener</name>
									<value>org.sonar.java.jacoco.JUnitListener</value>
								</property>
							</properties> -->
							<!-- Let's put failsafe reports with surefire to have access to tests failures/success reports in sonar -->
							<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.7.4.201502262128</version>
						<executions>
							<!-- Prepares a variable, jacoco.agent.ut.arg, that contains the info to be passed to the JVM hosting the code being 
								tested. -->
							<execution>
								<id>prepare-ut-agent</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${sonar.jacoco.reportPath}</destFile>
									<propertyName>jacoco.agent.ut.arg</propertyName>
									<append>true</append>
								</configuration>
							</execution>
							<!-- Prepares a variable, jacoco.agent.it.arg, that contains the info to be passed to the JVM hosting the code being 
								tested. -->
							<execution>
								<id>prepare-it-agent</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${sonar.jacoco.itReportPath}</destFile>
									<propertyName>jacoco.agent.it.arg</propertyName>
									<append>true</append>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<!-- https://maven-repository.com/artifact/org.sonarsource.java/sonar-jacoco-listeners -->
			<!-- <dependencies>
				<dependency>
	  				<groupId>org.sonarsource.java</groupId>
	  				<artifactId>sonar-jacoco-listeners</artifactId>
	  				<version>3.7.1</version>
	  				<scope>test</scope>
				</dependency>
			</dependencies> -->
		</profile>
	</profiles>

	<distributionManagement>
		<repository>
			<id>fsm.release</id>
			<url>http://gucio.lodz2.comarch:8888/nexus/content/repositories/fsm.release</url>
		</repository>
	</distributionManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<webResources>
							<resource>
								<directory>src/main/webapp</directory>
								<filtering>true</filtering>
								<includes>
									<include>**/context.xml</include>
								</includes>
							</resource>
						</webResources>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.liquibase</groupId>
					<artifactId>liquibase-maven-plugin</artifactId>
					<version>3.1.1</version>
					<configuration>
						<skip>true</skip>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.4.2</version>
					<configuration>
						<username>hudson</username>
						<password>hudson-svn</password>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<checkModificationExcludeList>pom.xml</checkModificationExcludeList>
						<tagNameFormat>v@{project.version}</tagNameFormat>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>2.7.1</version>
				</plugin>


				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.19</version>
					<configuration>
						<argLine>-Duser.timezone=UTC</argLine>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.19</version>
					<configuration>
						<argLine>-Xmx1024m -Duser.timezone=UTC</argLine>
						<encoding>${project.build.sourceEncoding}</encoding>
						<testFailureIgnore>true</testFailureIgnore>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>


				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>jacoco-maven-plugin</artifactId>
										<versionRange>[0.5,)
										</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${compilerVersion}</source>
					<target>${compilerVersion}</target>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
					<optimize>true</optimize>
					<verbose>false</verbose>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.1</version>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>gucio_nexus</id>
			<name>Comarch Maven respository</name>
			<url>http://gucio.lodz2.comarch:8888/nexus/content/groups/public/</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>gucio_nexus</id>
			<name>Comarch Maven respository</name>
			<url>http://gucio.lodz2.comarch:8888/nexus/content/groups/public/</url>
		</pluginRepository>
	</pluginRepositories>

</project>
